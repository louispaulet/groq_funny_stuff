#!/usr/bin/env python3
import json
import re
import sys
from urllib.request import urlopen
from pathlib import Path

SPECIES_URL = "https://pokeapi.co/api/v2/pokemon-species?limit=20000"


SPECIAL_DISPLAY = {
    "mr-mime": "Mr. Mime",
    "mime-jr": "Mime Jr.",
    "type-null": "Type: Null",
    "ho-oh": "Ho-Oh",
    "porygon-z": "Porygon-Z",
    "jangmo-o": "Jangmo-o",
    "hakamo-o": "Hakamo-o",
    "kommo-o": "Kommo-o",
    "nidoran-f": "Nidoran♀",
    "nidoran-m": "Nidoran♂",
    "farfetchd": "Farfetch’d",
    "sirfetchd": "Sirfetch’d",
    "wo-chien": "Wo-Chien",
    "chien-pao": "Chien-Pao",
    "ting-lu": "Ting-Lu",
    "chi-yu": "Chi-Yu",
}


def display_from_slug(slug: str) -> str:
    if slug in SPECIAL_DISPLAY:
        return SPECIAL_DISPLAY[slug]
    # Title-case words, keep hyphens when they represent canonical hyphenated names
    parts = slug.split("-")
    titled = [p.capitalize() for p in parts]
    # Default to spaces for readability (e.g., tapu koko), some hyphenated handled in SPECIAL_DISPLAY
    return " ".join(titled)


def build_aliases(slugs):
    aliases = {}
    def add(alias, slug):
        alias = alias.lower()
        if alias and alias not in aliases:
            aliases[alias] = slug

    for slug in slugs:
        disp = display_from_slug(slug)
        # primary forms
        add(slug, slug)
        add(slug.replace("-", " "), slug)
        add(disp, slug)
        add(disp.replace("-", " "), slug)
        add(disp.replace(".", ""), slug)
        # special punctuation swaps
        if slug == "mr-mime":
            add("mr. mime", slug)
            add("mr mime", slug)
        if slug == "mime-jr":
            add("mime jr.", slug)
            add("mime jr", slug)
        if slug in ("farfetchd", "sirfetchd"):
            add("farfetch'd", "farfetchd")
            add("farfetch’d", "farfetchd")
            add("sirfetch'd", "sirfetchd")
            add("sirfetch’d", "sirfetchd")
        if slug == "type-null":
            add("type null", slug)
            add("type: null", slug)
        if slug in ("ho-oh", "porygon-z", "jangmo-o", "hakamo-o", "kommo-o"):
            add(slug.replace("-", " "), slug)
        if slug == "nidoran-f":
            add("nidoran f", slug)
            add("nidoran♀", slug)
        if slug == "nidoran-m":
            add("nidoran m", slug)
            add("nidoran♂", slug)
        if slug == "flabebe":
            add("flabebe", slug)
            add("flabébé", slug)
    return aliases


def main(out_path: str):
    with urlopen(SPECIES_URL) as resp:
        data = json.loads(resp.read().decode("utf-8"))
    results = data.get("results", [])
    slugs = sorted({item["name"] for item in results})
    aliases = build_aliases(slugs)
    slug_to_display = {slug: display_from_slug(slug) for slug in slugs}

    # Emit Python module
    with open(out_path, "w", encoding="utf-8") as f:
        f.write("# Auto-generated by pokedex/scripts/generate_pokemon_names.py\n")
        f.write("ALL_POKEMON_SLUGS = [\n")
        for s in slugs:
            f.write(f"    '{s}',\n")
        f.write("]\n\n")
        f.write("SLUG_TO_DISPLAY = {\n")
        for s in slugs:
            disp = slug_to_display[s].replace("'", "\\'")
            f.write(f"    '{s}': '{disp}',\n")
        f.write("}\n\n")
        f.write("NAME_ALIASES = {\n")
        for a, s in sorted(aliases.items()):
            a_escaped = a.replace("'", "\\'")
            f.write(f"    '{a_escaped}': '{s}',\n")
        f.write("}\n")


if __name__ == "__main__":
    if len(sys.argv) > 1:
        out = sys.argv[1]
    else:
        # Default to the pokedex package alongside this script
        out = str(Path(__file__).resolve().parents[1] / "pokemon_names.py")
    main(out)
